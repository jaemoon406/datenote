name: prac django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAVE }}
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306 
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

#     env:
#       SECRET_KEY: 
#         SECRET_KEY:${{ secrets.SECRET_KEY }}
#         ALGORITHM:${{ secrets.ALGORITHM }}
#         APP_DB_ENGINE:${{ secrets.APP_DB_ENGINE }}
#         DB_NAME:${{ secrets.DB_NAME }}
#         DB_USER:${{ secrets.DB_USER }}
#         DB_PASSWORD:${{ secrets.DB_PASSWORD }}
#         DB_HOST:${{ secrets.DB_HOST }}
#         DB_PORT:${{ secrets.DB_PORT }}
#         PRIVATE_KEY:${{ secrets.PRIVATE_KEY }}
#         REDIS_HOST:${{ secrets.REDIS_HOST }}
#         SLACK_BOT_TOKEN:${{ secrets.SLACK_BOT_TOKEN }}


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install -r requirements.txt
        python -m pip install --upgrade pip
    - name: SetUp MySQL
      run: |
        mysql --version
        mysql -uroot -proot -e "CREATE DATABASE ${{ secrets.DB_NAME }}"
        mysql -uroot -proot -e "SHOW DATABASES"
#     - name: Set up MySQL
#       run: |
#         sudo /etc/init.d/mysql start
  #      mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
#     - name: SetUp MySQL
#       run: |
#         sudo /etc/init.d/mysql start
#         mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
#        sudo service mysql start
#        mysql -h 127.0.0.1 --port 3306 -u root -p password -e 'CREATE DATABASE IF NOT EXISTS test;'
#     - name: Run Migrations
#       run: python manage.py migrate
#       env: 
#         DBENGINE: django.db.backends.mysql
#         DBNAME: ${{ secrets.DB_NAME }}
#         DBUSER: ${{ secrets.DB_USER }}
#         DBPASSWORD: ${{ secrets.DB_PASSWORD }}
#         DBHOST: ${{ secrets.DB_HOST }}
#         DBPORT: ${{ secrets.DB_PORT }}
        

#     - name: Apply Env Source
#       run: |
#         touch .env
#         echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
#         echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env
#         echo "APP_DB_ENGINE=${{ secrets.APP_DB_ENGINE }}" >> .env
#         echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#         echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#         echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#         echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#         echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#         echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
#         echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
#         echo "SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}" >> .env
#         cat .env



    - name: Run Tests
      run: |
        python manage.py test
